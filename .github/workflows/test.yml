name: Django Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: amazontracker_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # Changed localhost to 127.0.0.1 to explicitly force TCP/IP connection for psycopg2
      DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/amazontracker_db
      DJANGO_SETTINGS_MODULE: tracker_backend.settings
      PYTHONUNBUFFERED: 1

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install django pytest pytest-django psycopg2-binary python-dotenv

      - name: Run tests
        run: |
          # Add a small delay to ensure PostgreSQL service is fully ready,
          # despite health checks. This is a common workaround.
          echo "Waiting for PostgreSQL to be ready..."
          sleep 5

          python manage.py makemigrations --check --dry-run || true
          python manage.py migrate --noinput
          pytest
